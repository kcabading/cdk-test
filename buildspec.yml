version: 0.2

env:
  variables:
    CDK_DEFAULT_REGION: "us-east-1"  # Specify the AWS region
    CDK_OUTDIR: "cdk.out"            # The output directory for CDK generated CloudFormation templates

phases:
  install:
    commands:
      # Install Node.js and npm (required for the AWS CDK CLI)
      - echo Installing Node.js and npm...
      - curl -sL https://rpm.nodesource.com/setup_20.x | sudo bash -  # Setup Node.js 20.x (or your preferred version)
      - sudo yum install -y nodejs   # Install Node.js using yum

      # Verify Node.js and npm installation
      - node --version
      - npm --version

      # Install AWS CDK globally using npm (necessary for `cdk` command)
      - echo Installing AWS CDK...
      - npm install -g aws-cdk

      # Install Python 3 and pip
      - echo Installing Python 3 and pip...
      - sudo yum install -y python3 python3-pip

      # Verify Python and pip installation
      - python3 --version
      - pip3 --version

      # Install AWS CDK dependencies (e.g., aws-cdk-lib, constructs)
      - echo Installing Python project dependencies...
      - pip3 install -r requirements.txt  # Assuming you have a requirements.txt for Python dependencies

  pre_build:
    commands:
      # Optional: Bootstrap the environment if this is the first deployment
      # This step is necessary to set up resources like an S3 bucket for assets
      # Only needed once per region/account
      # - cdk bootstrap

  build:
    commands:
      # Synthesizing the CloudFormation template from the AWS CDK code
      - echo Synthesizing CloudFormation template using AWS CDK...
      - cdk synth

      # Define the output CloudFormation template file from CDK synthesis
      - TEMPLATE_PATH=cdk.out/GalaxyCdk2Stack.template.json  # Change this if your stack name is different

  post_build:
    commands:
      # Deploy the CloudFormation template using the AWS CLI
      # Deploy the stack using the `aws cloudformation deploy` command
      - echo Deploying CloudFormation template...
      - cdk deploy \
          --template-file $TEMPLATE_PATH \
          --stack-name GalaxyCdk2Stack \
          --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM  # Required if you are using IAM resources

artifacts:
  files:
    - '**/*'
  discard-paths: yes
